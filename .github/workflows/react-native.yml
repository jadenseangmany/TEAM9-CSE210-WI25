name: React Native CI
on:
  push:
    branches:
      - '**'  # trigger on push to any branch
  pull_request:
    branches:
      - main # only trigger when PR trying to merge into main
jobs:
  test:
    name: Test React Native
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm' # Use npm cache
      
      - name: Install dependencies
        run: npm ci # Installs dependencies using package-lock.json
     
     # Disabled for now
     # - name: Run ESLint
     #   run: npm run lint # Ensure you have a 'lint' script in package.json
      
      # - name: Run Jest tests
      #   run: npm test -- --ci --coverage # Ensures tests run in CI mode
      - name: Run Jest tests
        run: npm test -- --ci --coverage # || echo "Tests failed but continuing build"
        # continue-on-error: true  # Remove this once tests are fixed

  android-build:
    name: Build Android App
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/*.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Set execute permissions for gradlew
        run: chmod +x android/gradlew
      
      - name: Build Android app
        run: |
          cd android
          ./gradlew assembleDebug
      
      - name: Upload Android Build
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

  # ios-build:
  #   name: Build iOS App
  #   needs: test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #         cache: 'npm'
      
  #     - name: Install dependencies
  #       run: npm ci
      
  #     - name: Cache Pods
  #       uses: actions/cache@v4
  #       with:
  #         path: ios/Pods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pods-
      
  #     - name: Install CocoaPods
  #       run: |
  #         cd ios
  #         pod install --silent
      
  #     - name: Build iOS app
  #       run: |
  #         cd ios
  #         xcodebuild -workspace cse210.xcworkspace -scheme cse210 -sdk iphonesimulator -configuration Debug build CODE_SIGNING_ALLOWED=NO
      
  #     - name: Upload iOS Build Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ios-build
  #         path: ios/build
